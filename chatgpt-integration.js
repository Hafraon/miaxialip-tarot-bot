// chatgpt-integration.js
// ChatGPT —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è –¥–ª—è MiaxiaLip Tarot –±–æ—Ç–∞

const axios = require('axios');

// API –∫–ª—é—á –∑ –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ Railway (–ë–ï–ó–ü–ï–ß–ù–û!)
const OPENAI_API_KEY = process.env.OPENAI_API_KEY;

// –†–æ–∑—É–º–Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—è –∫–æ–Ω—Ç–µ–Ω—Ç—É —á–µ—Ä–µ–∑ ChatGPT
class TarotContentGenerator {
    constructor() {
        this.targetAudience = "–∂—ñ–Ω–∫–∏ 25-45 —Ä–æ–∫—ñ–≤, —è–∫—ñ —Ü—ñ–∫–∞–≤–ª—è—Ç—å—Å—è –¥—É—Ö–æ–≤–Ω—ñ—Å—Ç—é —Ç–∞ —Å–∞–º–æ—Ä–æ–∑–≤–∏—Ç–∫–æ–º";
        this.brandName = "MiaxiaLip";
        this.contactInfo = {
            website: "https://theglamstyle.com.ua",
            instagram: "@miaxialip",
            email: "miaxialip@gmail.com"
        };
    }

    // –û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –∫–æ–Ω—Ç–µ–Ω—Ç—É
    async generateTarotContent(type = 'motivation') {
        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ API –∫–ª—é—á–∞
        if (!OPENAI_API_KEY) {
            console.error('‚ùå OPENAI_API_KEY –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ Railway!');
            console.log('üí° –î–æ–¥–∞–π—Ç–µ API –∫–ª—é—á –≤ Railway Variables');
            return this.getFallbackContent(type);
        }

        const prompts = {
            motivation: `–°—Ç–≤–æ—Ä–∏ –º–æ—Ç–∏–≤–∞—Ü—ñ–π–Ω–∏–π –ø–æ—Å—Ç –¥–ª—è Telegram –∫–∞–Ω–∞–ª—É –ø—Ä–æ –≤–Ω—É—Ç—Ä—ñ—à–Ω—é —Å–∏–ª—É —Ç–∞ –≤—ñ—Ä—É –≤ —Å–µ–±–µ. 
                        –ê—É–¥–∏—Ç–æ—Ä—ñ—è: ${this.targetAudience}. 
                        –°—Ç–∏–ª—å: —Ç–µ–ø–ª–æ, –ø—ñ–¥—Ç—Ä–∏–º–∫–∞, –¥—É—Ö–æ–≤–Ω—ñ—Å—Ç—å, –∂—ñ–Ω–æ—á–Ω—ñ—Å—Ç—å. 
                        –î–æ–¥–∞–π –µ–º–æ–¥–∑—ñ. –ú–∞–∫—Å–∏–º—É–º 120 —Å–ª—ñ–≤.
                        –û–±–æ–≤'—è–∑–∫–æ–≤–æ –∑–∞–∫—ñ–Ω—á–∏ –∑–∞–∫–ª–∏–∫–æ–º –∑–∞–ø–∏—Å–∞—Ç–∏—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é.
                        –ë—Ä–µ–Ω–¥: ${this.brandName}`,
                        
            love: `–ù–∞–ø–∏—à–∏ –ø–æ—Å—Ç –ø—Ä–æ –ª—é–±–æ–≤ —Ç–∞ —Å—Ç–æ—Å—É–Ω–∫–∏ –∑ —Ç–æ—á–∫–∏ –∑–æ—Ä—É –¢–∞—Ä–æ —Ç–∞ –¥—É—Ö–æ–≤–Ω–æ—Å—Ç—ñ.
                   –ê—É–¥–∏—Ç–æ—Ä—ñ—è: ${this.targetAudience}.
                   –í–∫–ª—é—á–∏ –ø–æ—Ä–∞–¥–∏ –¥–ª—è –ø–æ–∫—Ä–∞—â–µ–Ω–Ω—è —Å—Ç–æ—Å—É–Ω–∫—ñ–≤.
                   –î–æ–¥–∞–π –µ–º–æ–¥–∑—ñ. 100-120 —Å–ª—ñ–≤.
                   –ó–∞–∫—ñ–Ω—á–∏ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—î—é –∑–∞–º–æ–≤–∏—Ç–∏ –ª—é–±–æ–≤–Ω–∏–π —Ä–æ–∑–∫–ª–∞–¥.`,
                   
            career: `–°—Ç–≤–æ—Ä–∏ –ø–æ—Å—Ç –ø—Ä–æ –∫–∞—Ä'—î—Ä–Ω–∏–π —Ä–æ–∑–≤–∏—Ç–æ–∫ —á–µ—Ä–µ–∑ –ø—Ä–∏–∑–º—É –¥—É—Ö–æ–≤–Ω–æ—Å—Ç—ñ.
                     –Ø–∫ –ø—Ä–∏—Å–ª—É—Ö–∞—Ç–∏—Å—è –¥–æ —ñ–Ω—Ç—É—ó—Ü—ñ—ó –≤ —Ä–æ–±–æ—Ç—ñ?
                     –ê—É–¥–∏—Ç–æ—Ä—ñ—è: ${this.targetAudience}.
                     –î–æ–¥–∞–π –µ–º–æ–¥–∑—ñ —Ç–∞ –∑–∞–∫–ª–∏–∫ –¥–æ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—ó. –î–æ 120 —Å–ª—ñ–≤.`,
                     
            astrology: `–ù–∞–ø–∏—à–∏ —Ü—ñ–∫–∞–≤–∏–π –ø–æ—Å—Ç –ø—Ä–æ –≤–ø–ª–∏–≤ –ø–ª–∞–Ω–µ—Ç –Ω–∞ –Ω–∞—à–µ –∂–∏—Ç—Ç—è.
                        –ü—Ä–æ—Å—Ç–æ—é –º–æ–≤–æ—é, –±–µ–∑ –∑–∞–Ω–∞–¥—Ç–æ —Å–∫–ª–∞–¥–Ω–∏—Ö —Ç–µ—Ä–º—ñ–Ω—ñ–≤.
                        –ê—É–¥–∏—Ç–æ—Ä—ñ—è: ${this.targetAudience}.
                        –î–æ–¥–∞–π –µ–º–æ–¥–∑—ñ —Ç–∞ –∑–≥–∞–¥–∫—É –ø—Ä–æ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—ó. 100-120 —Å–ª—ñ–≤.`,
                        
            daily: `–°—Ç–≤–æ—Ä–∏ –Ω–∞—Ç—Ö–Ω–µ–Ω–Ω–∏–π "–ø–æ—Å—Ç –¥–Ω—è" –∑ –¥—É—Ö–æ–≤–Ω–æ—é –º—É–¥—Ä—ñ—Å—Ç—é.
                    –©–æ –º–æ–∂–µ –Ω–∞–¥–∏—Ö–Ω—É—Ç–∏ –∂—ñ–Ω–∫—É —Å—å–æ–≥–æ–¥–Ω—ñ?
                    –ê—É–¥–∏—Ç–æ—Ä—ñ—è: ${this.targetAudience}.
                    –¢–µ–ø–ª–æ, –ø–æ–∑–∏—Ç–∏–≤–Ω–æ. –î–æ–¥–∞–π –µ–º–æ–¥–∑—ñ. –î–æ 100 —Å–ª—ñ–≤.
                    –ó–∞–∫—ñ–Ω—á–∏ –∑–∞–∫–ª–∏–∫–æ–º –Ω–∞–ø–∏—Å–∞—Ç–∏ –≤ –æ—Å–æ–±–∏—Å—Ç—ñ –∞–±–æ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é.`,
                    
            special: `–ù–∞–ø–∏—à–∏ –ø–æ—Å—Ç –ø—Ä–æ –ø—Ä–∞–∫—Ç–∏–∫–∏ —Å–∞–º–æ–ø—ñ–∑–Ω–∞–Ω–Ω—è (–º–µ–¥–∏—Ç–∞—Ü—ñ—è, –≤–µ–¥–µ–Ω–Ω—è —â–æ–¥–µ–Ω–Ω–∏–∫–∞, —Ç–æ—â–æ).
                      –ü—Ä–∞–∫—Ç–∏—á–Ω—ñ –ø–æ—Ä–∞–¥–∏ –¥–ª—è –¥—É—Ö–æ–≤–Ω–æ–≥–æ —Ä–æ–∑–≤–∏—Ç–∫—É.
                      –ê—É–¥–∏—Ç–æ—Ä—ñ—è: ${this.targetAudience}.
                      –î–æ–¥–∞–π –µ–º–æ–¥–∑—ñ. 130-150 —Å–ª—ñ–≤.
                      –î–æ–¥–∞–π –∑–∞–∫–ª–∏–∫ –¥–æ –¥—ñ—ó.`,

            evening: `–°—Ç–≤–æ—Ä–∏ –≤–µ—á—ñ—Ä–Ω—ñ–π –ø–æ—Å—Ç –¥–ª—è —Ä–µ—Ñ–ª–µ–∫—Å—ñ—ó —Ç–∞ –ø—ñ–¥–≤–µ–¥–µ–Ω–Ω—è –ø—ñ–¥—Å—É–º–∫—ñ–≤ –¥–Ω—è.
                      –¢–µ–º–∞: –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ–π —Å–ø–æ–∫—ñ–π —Ç–∞ –±–ª–∞–≥–æ–¥–∞—Ä–Ω—ñ—Å—Ç—å.
                      –ê—É–¥–∏—Ç–æ—Ä—ñ—è: ${this.targetAudience}.
                      –ú'—è–∫–∏–π, –∑–∞—Å–ø–æ–∫—ñ–π–ª–∏–≤–∏–π —Ç–æ–Ω. –ï–º–æ–¥–∑—ñ. –î–æ 100 —Å–ª—ñ–≤.`
        };

        try {
            console.log(`ü§ñ –ì–µ–Ω–µ—Ä—É—î–º–æ ${type} –∫–æ–Ω—Ç–µ–Ω—Ç —á–µ—Ä–µ–∑ ChatGPT...`);

            const response = await axios.post('https://api.openai.com/v1/chat/completions', {
                model: "gpt-3.5-turbo",
                messages: [
                    {
                        role: "system", 
                        content: `–¢–∏ - –¥–æ—Å–≤—ñ–¥—á–µ–Ω–∏–π –∫–æ–ø—ñ—Ä–∞–π—Ç–µ—Ä –¥–ª—è —Ç–∞—Ä–æ-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–∞ ${this.brandName}. 
                                 –ü–∏—à–µ—à —Ç–µ–ø–ª–æ, –∂—ñ–Ω–æ—á–Ω–æ, –Ω–∞—Ç—Ö–Ω–µ–Ω–Ω–æ. –£–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é –º–æ–≤–æ—é. 
                                 –ó–∞–≤–∂–¥–∏ –¥–æ–¥–∞—î—à –∑–∞–∫–ª–∏–∫ –¥–æ –¥—ñ—ó. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—à –µ–º–æ–¥–∑—ñ –¥–æ—Ä–µ—á–Ω–æ.
                                 –°—Ç–∏–ª—å: –¥—É—Ö–æ–≤–Ω–∏–π, –ø—ñ–¥—Ç—Ä–∏–º—É—é—á–∏–π, –º–æ—Ç–∏–≤–∞—Ü—ñ–π–Ω–∏–π.`
                    },
                    {
                        role: "user", 
                        content: prompts[type] || prompts.motivation
                    }
                ],
                max_tokens: 200,
                temperature: 0.8, // –î–ª—è –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—ñ
                presence_penalty: 0.1, // –£–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–æ–≤—Ç–æ—Ä—ñ–≤
                frequency_penalty: 0.1
            }, {
                headers: {
                    'Authorization': `Bearer ${OPENAI_API_KEY}`,
                    'Content-Type': 'application/json'
                },
                timeout: 30000 // 30 —Å–µ–∫—É–Ω–¥ —Ç–∞–π–º–∞—É—Ç
            });

            const generatedContent = response.data.choices[0].message.content.trim();
            
            // –õ–æ–≥—É–≤–∞–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ—ó –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó
            console.log(`‚úÖ ChatGPT ${type} –∫–æ–Ω—Ç–µ–Ω—Ç –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ`);
            console.log(`üìù –î–æ–≤–∂–∏–Ω–∞: ${generatedContent.length} —Å–∏–º–≤–æ–ª—ñ–≤`);
            
            return generatedContent;
            
        } catch (error) {
            // –î–µ—Ç–∞–ª—å–Ω–µ –ª–æ–≥—É–≤–∞–Ω–Ω—è –ø–æ–º–∏–ª–æ–∫
            if (error.response) {
                console.error('‚ùå OpenAI API –ø–æ–º–∏–ª–∫–∞:', error.response.status, error.response.data);
            } else if (error.request) {
                console.error('‚ùå –ú–µ—Ä–µ–∂–µ–≤–∞ –ø–æ–º–∏–ª–∫–∞:', error.message);
            } else {
                console.error('‚ùå –ó–∞–≥–∞–ª—å–Ω–∞ –ø–æ–º–∏–ª–∫–∞:', error.message);
            }
            
            // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –∑–∞–ø–∞—Å–Ω–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç
            console.log('üîÑ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∑–∞–ø–∞—Å–Ω–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç');
            return this.getFallbackContent(type);
        }
    }

    // –ó–∞–ø–∞—Å–Ω–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç —è–∫—â–æ ChatGPT –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π
    getFallbackContent(type) {
        const fallback = {
            motivation: `‚ú® –ö–æ–∂–µ–Ω –¥–µ–Ω—å - —Ü–µ –Ω–æ–≤–∏–π —à–∞–Ω—Å —Å—Ç–∞—Ç–∏ –∫—Ä–∞—â–æ—é –≤–µ—Ä—Å—ñ—î—é —Å–µ–±–µ. –î–æ–≤—ñ—Ä—Ç–µ—Å—è —Å–≤–æ—ó–π —ñ–Ω—Ç—É—ó—Ü—ñ—ó —Ç–∞ –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ–π –º—É–¥—Ä–æ—Å—Ç—ñ üí´

üåü –í–∞—à–∞ —Å–∏–ª–∞ - —É –≤–∞—Å —Å–∞–º–∏—Ö. –ü—Ä–æ—Å—Ç–æ –ø–æ–≤—ñ—Ä—Ç–µ –≤ —Å–µ–±–µ —ñ –π–¥—ñ—Ç—å –≤–ø–µ—Ä–µ–¥!

üîÆ –ü–æ—Ç—Ä—ñ–±–Ω–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞? –ó–∞–ø–∏—Å—É–π—Ç–µ—Å—å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é –≤ –æ—Å–æ–±–∏—Å—Ç—ñ!`,

            love: `üíï –°–ø—Ä–∞–≤–∂–Ω—î –∫–æ—Ö–∞–Ω–Ω—è –ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è –∑ –ª—é–±–æ–≤—ñ –¥–æ —Å–µ–±–µ. –ö–æ–ª–∏ –º–∏ –≥–∞—Ä–º–æ–Ω—ñ–π–Ω—ñ –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ, –º–∏ –ø—Ä–∏—Ç—è–≥—É—î–º–æ –ø—Ä–∞–≤–∏–ª—å–Ω–∏—Ö –ª—é–¥–µ–π üåπ

‚ú® –í—ñ–¥–∫—Ä–∏–π—Ç–µ —Å–≤–æ—î —Å–µ—Ä—Ü–µ –¥–ª—è –Ω–æ–≤–∏—Ö –º–æ–∂–ª–∏–≤–æ—Å—Ç–µ–π —É –∫–æ—Ö–∞–Ω–Ω—ñ!

üíå –ü–∏—Ç–∞–Ω–Ω—è –ø—Ä–æ —Å—Ç–æ—Å—É–Ω–∫–∏? –ü–∏—à—ñ—Ç—å, —Ä–æ–∑–±–µ—Ä–µ–º–æ —Ä–∞–∑–æ–º –≤ –æ—Å–æ–±–∏—Å—Ç—ñ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—ó!`,

            career: `üéØ –í–∞—à–∞ –∫–∞—Ä'—î—Ä–∞ - —Ü–µ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≤–∞—à–æ–≥–æ –≤–Ω—É—Ç—Ä—ñ—à–Ω—å–æ–≥–æ –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è. –ü—Ä–∏—Å–ª—É—Ö–∞–π—Ç–µ—Å—è –¥–æ —Å–µ—Ä—Ü—è –ø—Ä–∏ –≤–∏–±–æ—Ä—ñ —à–ª—è—Ö—É üíº‚ú®

üåü –Ü–Ω—Ç—É—ó—Ü—ñ—è - –≤–∞—à –Ω–∞–π–∫—Ä–∞—â–∏–π –ø–æ—Ä–∞–¥–Ω–∏–∫ —É –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∏—Ö –ø–∏—Ç–∞–Ω–Ω—è—Ö!

üìû –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—è –∑ –∫–∞—Ä'—î—Ä–∏? –ó–≤–µ—Ä—Ç–∞–π—Ç–µ—Å—å –Ω–∞ —Å–∞–π—Ç –∞–±–æ –≤ –æ—Å–æ–±–∏—Å—Ç—ñ!`,

            astrology: `üåô –ú—ñ—Å—è—Ü—å —Å—å–æ–≥–æ–¥–Ω—ñ –Ω–∞–≥–∞–¥—É—î –Ω–∞–º –ø—Ä–æ –≤–∞–∂–ª–∏–≤—ñ—Å—Ç—å —Ü–∏–∫–ª—ñ–≤ —É –Ω–∞—à–æ–º—É –∂–∏—Ç—Ç—ñ. –í—Å–µ –º–∞—î —Å–≤—ñ–π —á–∞—Å ‚≠ê

üîÆ –ó—ñ—Ä–∫–∏ –ø—ñ–¥—Ç—Ä–∏–º—É—é—Ç—å —Ç–∏—Ö, —Ö—Ç–æ –π–¥–µ –∑–∞ —Å–≤–æ—ó–º –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è–º!

‚ú® –•–æ—á–µ—Ç–µ –∑–Ω–∞—Ç–∏ –±—ñ–ª—å—à–µ –ø—Ä–æ –≤–ø–ª–∏–≤ –ø–ª–∞–Ω–µ—Ç? –ó–∞–ø–∏—Å—É–π—Ç–µ—Å—å –Ω–∞ –∞—Å—Ç—Ä–æ–ª–æ–≥—ñ—á–Ω—É –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é!`,

            daily: `üåÖ –ù–æ–≤–∏–π –¥–µ–Ω—å –ø—Ä–∏–Ω–æ—Å–∏—Ç—å –Ω–æ–≤—ñ –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ. –ë—É–¥—å—Ç–µ –≤—ñ–¥–∫—Ä–∏—Ç—ñ –¥–æ –∑–º—ñ–Ω —Ç–∞ –¥–æ–≤—ñ—Ä—è–π—Ç–µ –ø—Ä–æ—Ü–µ—Å—É üôè

üí´ –°—å–æ–≥–æ–¥–Ω—ñ –æ—Å–æ–±–ª–∏–≤–æ –≤–∞–∂–ª–∏–≤–æ –ø—Ä–∏—Å–ª—É—Ö–∞—Ç–∏—Å—è –¥–æ —Å–≤–æ–≥–æ —Å–µ—Ä—Ü—è!

‚ú® –ü–æ—Ç—Ä—ñ–±–Ω–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞? –Ø —Ç—É—Ç –¥–ª—è –≤–∞—Å - –ø–∏—à—ñ—Ç—å –≤ –æ—Å–æ–±–∏—Å—Ç—ñ!`,

            special: `üßò‚Äç‚ôÄÔ∏è –ú–µ–¥–∏—Ç–∞—Ü—ñ—è - —Ü–µ —Ä–æ–∑–º–æ–≤–∞ –∑ –¥—É—à–µ—é. –ü—Ä–∏–¥—ñ–ª—ñ—Ç—å —Å–æ–±—ñ 10 —Ö–≤–∏–ª–∏–Ω —Ç–∏—à—ñ —Å—å–æ–≥–æ–¥–Ω—ñ üîÆ

üìù –í–µ–¥–µ–Ω–Ω—è —â–æ–¥–µ–Ω–Ω–∏–∫–∞ –¥–æ–ø–æ–º–∞–≥–∞—î –∫—Ä–∞—â–µ –∑—Ä–æ–∑—É–º—ñ—Ç–∏ —Å–µ–±–µ
üå∏ –ü—Ä–∞–∫—Ç–∏–∫—É–π—Ç–µ –±–ª–∞–≥–æ–¥–∞—Ä–Ω—ñ—Å—Ç—å –∫–æ–∂–µ–Ω –¥–µ–Ω—å

üíé –•–æ—á–µ—Ç–µ –±—ñ–ª—å—à–µ –ø—Ä–∞–∫—Ç–∏–∫ –¥–ª—è –¥—É—Ö–æ–≤–Ω–æ–≥–æ —Ä–æ–∑–≤–∏—Ç–∫—É? –ó–∞–ø–∏—Å—É–π—Ç–µ—Å—å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é!`,

            evening: `üåô –ß–∞—Å –ø—ñ–¥–≤–µ—Å—Ç–∏ –ø—ñ–¥—Å—É–º–∫–∏ –¥–Ω—è. –ü–æ–¥—è–∫—É–π—Ç–µ —Å–æ–±—ñ –∑–∞ –≤—Å–µ, —â–æ –≤—Å—Ç–∏–≥–ª–∏ –∑—Ä–æ–±–∏—Ç–∏ ‚ú®

üôè –ó–∞ —â–æ –≤–∏ —Å—å–æ–≥–æ–¥–Ω—ñ –≤–¥—è—á–Ω—ñ? –ó–æ—Å–µ—Ä–µ–¥—å—Ç–µ—Å—è –Ω–∞ –ø–æ–∑–∏—Ç–∏–≤–Ω–∏—Ö –º–æ–º–µ–Ω—Ç–∞—Ö.

üí´ –î–æ–±—Ä–æ—ó –Ω–æ—á—ñ —Ç–∞ —Å–æ–ª–æ–¥–∫–∏—Ö —Å–Ω—ñ–≤! –ó–∞–≤—Ç—Ä–∞ –Ω–∞ –≤–∞—Å —á–µ–∫–∞—é—Ç—å –Ω–æ–≤—ñ –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ üåü`
        };
        
        return fallback[type] || fallback.motivation;
    }

    // –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –∫–æ–Ω—Ç–µ–Ω—Ç—É –∑ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–º –¥–æ–¥–∞–≤–∞–Ω–Ω—è–º CTA
    async generateWithCTA(type) {
        const baseContent = await this.generateTarotContent(type);
        
        // –Ø–∫—â–æ –∫–æ–Ω—Ç–µ–Ω—Ç –≤–∂–µ –º–∞—î CTA, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ —è–∫ —î
        if (baseContent.includes('–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü') || baseContent.includes('–∑–∞–ø–∏—Å—É–π') || baseContent.includes('–ø–∏—à—ñ—Ç—å')) {
            return baseContent;
        }
        
        // –Ü–Ω–∞–∫—à–µ –¥–æ–¥–∞—î–º–æ CTA
        const cta = [
            "\n\nüìû –ó–∞–ø–∏—Å–∞—Ç–∏—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é - –ø–∏—à—ñ—Ç—å –≤ –æ—Å–æ–±–∏—Å—Ç—ñ!",
            "\n\nüîÆ –•–æ—á–µ—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∏–π —Ä–æ–∑–∫–ª–∞–¥? –ó–≤'—è–∂—ñ—Ç—å—Å—è –∑—ñ –º–Ω–æ—é!",
            "\n\n‚ú® –ü–æ—Ç—Ä—ñ–±–Ω–∞ —ñ–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—è? –ó–≤–µ—Ä—Ç–∞–π—Ç–µ—Å—å!",
            "\n\nüíå –ü–∏—Ç–∞–Ω–Ω—è? –í—ñ–¥–ø–æ–≤—ñ–¥—ñ? –ó–∞–ø–∏—Å—É–π—Ç–µ—Å—å –Ω–∞ —Å–µ–∞–Ω—Å!"
        ];
        
        const randomCTA = cta[Math.floor(Math.random() * cta.length)];
        return baseContent + randomCTA;
    }

    // –°–µ–∑–æ–Ω–Ω–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç
    async generateSeasonalContent() {
        const month = new Date().getMonth();
        const seasons = {
            winter: [11, 0, 1], // –≥—Ä—É–¥–µ–Ω—å, —Å—ñ—á–µ–Ω—å, –ª—é—Ç–∏–π
            spring: [2, 3, 4],  // –±–µ—Ä–µ–∑–µ–Ω—å, –∫–≤—ñ—Ç–µ–Ω—å, —Ç—Ä–∞–≤–µ–Ω—å  
            summer: [5, 6, 7],  // —á–µ—Ä–≤–µ–Ω—å, –ª–∏–ø–µ–Ω—å, —Å–µ—Ä–ø–µ–Ω—å
            autumn: [8, 9, 10]  // –≤–µ—Ä–µ—Å–µ–Ω—å, –∂–æ–≤—Ç–µ–Ω—å, –ª–∏—Å—Ç–æ–ø–∞–¥
        };
        
        let season = 'spring';
        for (const [seasonName, months] of Object.entries(seasons)) {
            if (months.includes(month)) {
                season = seasonName;
                break;
            }
        }
        
        const seasonPrompts = {
            winter: "–°—Ç–≤–æ—Ä–∏ –ø–æ—Å—Ç –ø—Ä–æ –≤–Ω—É—Ç—Ä—ñ—à–Ω—é —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü—ñ—é –≤–∑–∏–º–∫—É, —á–∞—Å –∑–∞–≥–ª–∏–±–ª–µ–Ω–Ω—è –≤ —Å–µ–±–µ —Ç–∞ —Å–∞–º–æ–ø—ñ–∑–Ω–∞–Ω–Ω—è",
            spring: "–ù–∞–ø–∏—à–∏ –ø—Ä–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–∞ –Ω–æ–≤—ñ –ø–æ—á–∏–Ω–∞–Ω–Ω—è –Ω–∞–≤–µ—Å–Ω—ñ, –ø—Ä–æ–±—É–¥–∂–µ–Ω–Ω—è –ø—Ä–∏—Ä–æ–¥–∏ —ñ –¥—É—à—ñ",
            summer: "–°—Ç–≤–æ—Ä–∏ –ø–æ—Å—Ç –ø—Ä–æ –µ–Ω–µ—Ä–≥—ñ—é —Ç–∞ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å –≤–ª—ñ—Ç–∫—É, —á–∞—Å —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—ó –ø–ª–∞–Ω—ñ–≤", 
            autumn: "–ù–∞–ø–∏—à–∏ –ø—Ä–æ —á–∞—Å –∑–±–æ—Ä—É —É—Ä–æ–∂–∞—é —Ç–∞ –ø—ñ–¥–≤–µ–¥–µ–Ω–Ω—è –ø—ñ–¥—Å—É–º–∫—ñ–≤ –≤–æ—Å–µ–Ω–∏, –º—É–¥—Ä—ñ—Å—Ç—å –∑—Ä—ñ–ª–æ—Å—Ç—ñ"
        };
        
        try {
            const response = await axios.post('https://api.openai.com/v1/chat/completions', {
                model: "gpt-3.5-turbo",
                messages: [
                    {
                        role: "system",
                        content: `–¢–∏ –ø–∏—à–µ—à —Å–µ–∑–æ–Ω–Ω–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è —Ç–∞—Ä–æ-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–∞ ${this.brandName}. –í—Ä–∞—Ö–æ–≤—É–π –µ–Ω–µ—Ä–≥—ñ—é –ø–æ—Ç–æ—á–Ω–æ–≥–æ —Å–µ–∑–æ–Ω—É.`
                    },
                    {
                        role: "user", 
                        content: `${seasonPrompts[season]} –ê—É–¥–∏—Ç–æ—Ä—ñ—è: ${this.targetAudience}. –î–æ–¥–∞–π –µ–º–æ–¥–∑—ñ. –î–æ 150 —Å–ª—ñ–≤. –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞ –º–æ–≤–∞.`
                    }
                ],
                max_tokens: 200,
                temperature: 0.7
            }, {
                headers: {
                    'Authorization': `Bearer ${OPENAI_API_KEY}`,
                    'Content-Type': 'application/json'
                }
            });
            
            return response.data.choices[0].message.content.trim();
            
        } catch (error) {
            console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó —Å–µ–∑–æ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç—É:', error.message);
            return this.getFallbackContent('daily');
        }
    }
}

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞
const contentGenerator = new TarotContentGenerator();

// –§–£–ù–ö–¶–Ü–á –î–õ–Ø –Ü–ù–¢–ï–ì–†–ê–¶–Ü–á –ó –û–°–ù–û–í–ù–ò–ú –ë–û–¢–û–ú

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ —Ä–æ–∑—É–º–Ω–æ–≥–æ –ø–æ—Å—Ç–∞
async function sendSmartPost(bot, channelId, type = null) {
    try {
        console.log('ü§ñ –ì–µ–Ω–µ—Ä—É—î–º–æ —Ä–æ–∑—É–º–Ω–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç...');
        
        // –Ø–∫—â–æ —Ç–∏–ø –Ω–µ –≤–∫–∞–∑–∞–Ω–∏–π, –æ–±–∏—Ä–∞—î–º–æ –≤–∏–ø–∞–¥–∫–æ–≤–∏–π
        const types = ['motivation', 'love', 'career', 'astrology', 'daily', 'special'];
        const selectedType = type || types[Math.floor(Math.random() * types.length)];
        
        // –ì–µ–Ω–µ—Ä—É—î–º–æ –∫–æ–Ω—Ç–µ–Ω—Ç —á–µ—Ä–µ–∑ ChatGPT
        const content = await contentGenerator.generateWithCTA(selectedType);
        
        console.log(`‚úÖ –ó–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ ${selectedType} –ø–æ—Å—Ç –¥–ª—è –∫–∞–Ω–∞–ª—É`);
        console.log(`üìù –ö–æ–Ω—Ç–µ–Ω—Ç: ${content.substring(0, 100)}...`);
        
        // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –≤ –∫–∞–Ω–∞–ª
        await bot.sendMessage(channelId, content, { parse_mode: 'Markdown' });
        
        return { success: true, type: selectedType, content };
        
    } catch (error) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ —Ä–æ–∑—É–º–Ω–æ–≥–æ –ø–æ—Å—Ç–∞:', error);
        
        // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –∑–∞–ø–∞—Å–Ω–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç
        const fallbackContent = contentGenerator.getFallbackContent('motivation');
        await bot.sendMessage(channelId, fallbackContent);
        
        return { success: false, error: error.message };
    }
}

// –†–æ–∑–∫–ª–∞–¥ —Ä–æ–∑—É–º–Ω–∏—Ö –ø–æ—Å—Ç—ñ–≤ (–∑–∞–º—ñ—Å—Ç—å —Å—Ç–∞—Ä–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π)
function scheduleSmartPosts(bot, channelId) {
    const cron = require('node-cron');
    
    console.log('üìÖ –†–æ–∑–∫–ª–∞–¥ —Ä–æ–∑—É–º–Ω–∏—Ö ChatGPT –ø–æ—Å—Ç—ñ–≤ –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–æ!');
    
    // –†–∞–Ω–∫–æ–≤–∏–π –º–æ—Ç–∏–≤–∞—Ü—ñ–π–Ω–∏–π –ø–æ—Å—Ç (9:00)
    cron.schedule('0 9 * * *', async () => {
        console.log('üìÖ –ß–∞—Å —Ä–∞–Ω–∫–æ–≤–æ–≥–æ –ø–æ—Å—Ç–∞!');
        await sendSmartPost(bot, channelId, 'motivation');
    });
    
    // –í–µ—á—ñ—Ä–Ω—ñ–π –ø–æ—Å—Ç (19:00) - –ª—é–±–æ–≤ –∞–±–æ –∞—Å—Ç—Ä–æ–ª–æ–≥—ñ—è
    cron.schedule('0 19 * * *', async () => {
        console.log('üìÖ –ß–∞—Å –≤–µ—á—ñ—Ä–Ω—å–æ–≥–æ –ø–æ—Å—Ç–∞!');
        
        const eveningTypes = ['love', 'astrology', 'evening'];
        const randomType = eveningTypes[Math.floor(Math.random() * eveningTypes.length)];
        
        await sendSmartPost(bot, channelId, randomType);
    });
    
    // –°–µ—Ä–µ–¥–Ω—ñ–π –¥–µ–Ω—å - –∫–∞—Ä'—î—Ä–Ω–∏–π –ø–æ—Å—Ç (12:00, –ø–Ω-–ø—Ç)
    cron.schedule('0 12 * * 1-5', async () => {
        console.log('üìÖ –î–µ–Ω–Ω–∏–π –ø–æ—Å—Ç –ø—Ä–æ –∫–∞—Ä\'—î—Ä—É!');
        await sendSmartPost(bot, channelId, 'career');
    });
    
    // –í–∏—Ö—ñ–¥–Ω–∏–π –ø–æ—Å—Ç (—Å—É–±–æ—Ç–∞ 14:00) - —Å–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ –ø—Ä–∞–∫—Ç–∏–∫–∏
    cron.schedule('0 14 * * 6', async () => {
        console.log('üìÖ –í–∏—Ö—ñ–¥–Ω–∏–π –ø–æ—Å—Ç!');
        await sendSmartPost(bot, channelId, 'special');
    });
    
    // –°–µ–∑–æ–Ω–Ω–∏–π –ø–æ—Å—Ç (–Ω–µ–¥—ñ–ª—è 12:00)
    cron.schedule('0 12 * * 0', async () => {
        console.log('üìÖ –°–µ–∑–æ–Ω–Ω–∏–π –ø–æ—Å—Ç!');
        
        const seasonalContent = await contentGenerator.generateSeasonalContent();
        const finalContent = seasonalContent + "\n\nüîÆ –ó–∞–ø–∏—Å–∞—Ç–∏—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é - –ø–∏—à—ñ—Ç—å –≤ –æ—Å–æ–±–∏—Å—Ç—ñ!";
        
        await bot.sendMessage(channelId, finalContent);
    });
}

// –¢–µ—Å—Ç–æ–≤–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ ChatGPT
async function testChatGPT(bot, chatId) {
    console.log('üß™ –¢–µ—Å—Ç—É—î–º–æ ChatGPT –≥–µ–Ω–µ—Ä–∞—Ü—ñ—é...');
    
    try {
        const testPost = await contentGenerator.generateTarotContent('motivation');
        
        await bot.sendMessage(chatId, `üß™ –¢–ï–°–¢ ChatGPT:\n\n${testPost}`);
        
        console.log('‚úÖ ChatGPT —Ç–µ—Å—Ç —É—Å–ø—ñ—à–Ω–∏–π!');
        return true;
        
    } catch (error) {
        console.error('‚ùå ChatGPT —Ç–µ—Å—Ç –Ω–µ –ø—Ä–æ–π—à–æ–≤:', error);
        
        await bot.sendMessage(chatId, '‚ùå –ü–æ–º–∏–ª–∫–∞ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è ChatGPT API. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è.');
        return false;
    }
}

// –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è ChatGPT
let chatgptStats = {
    totalGenerated: 0,
    successfulRequests: 0,
    failedRequests: 0,
    lastUsed: null
};

function updateChatGPTStats(success) {
    chatgptStats.totalGenerated++;
    chatgptStats.lastUsed = new Date();
    
    if (success) {
        chatgptStats.successfulRequests++;
    } else {
        chatgptStats.failedRequests++;
    }
}

function getChatGPTStats() {
    return {
        ...chatgptStats,
        successRate: chatgptStats.totalGenerated > 0 
            ? ((chatgptStats.successfulRequests / chatgptStats.totalGenerated) * 100).toFixed(1)
            : 0
    };
}

// –ï–∫—Å–ø–æ—Ä—Ç –≤—Å—ñ—Ö —Ñ—É–Ω–∫—Ü—ñ–π
module.exports = {
    TarotContentGenerator,
    contentGenerator,
    sendSmartPost,
    scheduleSmartPosts,
    testChatGPT,
    getChatGPTStats,
    updateChatGPTStats
};
